openapi: 3.1.0
info:
  title: MCP Sonarr Plugin
  description: "\n    Plugin for managing Sonarr media library through Media Control\
    \ Protocol.\n    \n    ## Available Endpoints\n    \n    ### OpenAI Plugin Endpoints\n\
    \    - `/.well-known/ai-plugin.json`: Plugin manifest\n    - `/openapi.yaml` or\
    \ `/openapi.json`: API specification\n    - `/api/v1/tools`: List available tools\n\
    \    - `/api/v1/schema`: Get tool schemas\n    - `/api/v1/call`: Call a specific\
    \ tool\n    - `/test`: Test endpoint (no authentication required)\n    \n    ###\
    \ Legacy Endpoints\n    - `/mcp/sonarr-status`: Check if Sonarr is accessible\n\
    \    - `/mcp/sonarr-query`: Execute Sonarr operations\n    - `/mcp/sonarr-capabilities`:\
    \ List available Sonarr operations\n    - `/mcp/sonarr-help`: Get help on using\
    \ Sonarr operations\n    - `/mcp/test`: Test endpoint (no authentication required)\n\
    \    \n    All endpoints except `/test` and `/mcp/test` require authentication\
    \ with a Bearer token.\n    "
  version: 1.0.0
paths:
  /:
    get:
      summary: API Welcome Page
      description: Welcome page for the Sonarr MCP API. This endpoint does not require
        authentication.
      operationId: root_get__get
      responses:
        '200':
          description: Welcome message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeResponse'
              example:
                message: Welcome to Sonarr MCP API
    post:
      summary: API Welcome Page (POST)
      description: Welcome page for the Sonarr MCP API (POST method). This endpoint
        does not require authentication.
      operationId: root_post__post
      responses:
        '200':
          description: Welcome message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeResponse'
              example:
                message: Welcome to Sonarr MCP API
  /api-key:
    get:
      summary: Retrieve API Key
      description: Retrieves the current API key. This endpoint is only accessible
        from localhost for security reasons.
      operationId: get_api_key_endpoint_api_key_get
      responses:
        '200':
          description: The current API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
              example:
                api_key: example1234567890abcdef
        '403':
          description: Access denied - endpoint only accessible from localhost
  /mcp/test:
    get:
      tags:
      - sonarr
      summary: Test Endpoint
      description: A simple test endpoint that doesn't require authentication.
      operationId: test_endpoint_mcp_test_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /mcp/sonarr-query:
    post:
      tags:
      - sonarr
      summary: Sonarr Query
      operationId: sonarr_query_mcp_sonarr_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SonarrQueryModel'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - bearerAuth: []
  /mcp/sonarr-capabilities:
    get:
      tags:
      - sonarr
      summary: List Sonarr Capabilities
      operationId: list_sonarr_capabilities_mcp_sonarr_capabilities_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonResponse'
      security:
      - bearerAuth: []
  /mcp/sonarr-help:
    get:
      tags:
      - sonarr
      summary: Sonarr Help
      operationId: sonarr_help_mcp_sonarr_help_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextResponse'
      security:
      - bearerAuth: []
  /mcp/sonarr-operation-params/{operation_id}:
    get:
      tags:
      - sonarr
      summary: Get Required Params
      operationId: get_required_params_mcp_sonarr_operation_params__operation_id__get
      security:
      - bearerAuth: []
      parameters:
      - name: operation_id
        in: path
        required: true
        schema:
          type: string
          title: Operation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationParamsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /mcp/sonarr-status:
    get:
      tags:
      - sonarr
      summary: Get Sonarr Status
      description: Check if the Sonarr API is accessible and the API key is valid.
      operationId: get_sonarr_status_mcp_sonarr_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
      - bearerAuth: []
  /mcp_list_tools:
    get:
      tags:
      - mcp
      summary: Mcp List Tools
      description: 'List all available tools on the MCP server.

        This endpoint is maintained for backward compatibility.'
      operationId: mcp_list_tools_mcp_list_tools_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /mcp_tool_schema:
    get:
      tags:
      - mcp
      summary: Mcp Tool Schema
      description: 'Get detailed schema information for tools.

        If tool_name is provided, returns schema for that specific tool.

        Otherwise, returns schemas for all tools.

        This endpoint is maintained for backward compatibility.'
      operationId: mcp_tool_schema_mcp_tool_schema_get
      parameters:
      - name: tool_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /mcp_call_tool:
    post:
      tags:
      - mcp
      summary: Mcp Call Tool
      description: 'Call a specific tool with the provided arguments.

        This endpoint is maintained for backward compatibility.'
      operationId: mcp_call_tool_mcp_call_tool_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - bearerAuth: []
  /api/v1/tools:
    get:
      tags:
      - mcp
      summary: List Tools
      description: 'List all available tools on the MCP server.

        This endpoint follows OpenAI''s plugin conventions.'
      operationId: list_tools_api_v1_tools_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/schema:
    get:
      tags:
      - mcp
      summary: Get Tool Schema
      description: 'Get detailed schema information for tools.

        If tool_name is provided, returns schema for that specific tool.

        Otherwise, returns schemas for all tools.

        This endpoint follows OpenAI''s plugin conventions.'
      operationId: get_tool_schema_api_v1_schema_get
      parameters:
      - name: tool_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/call:
    post:
      tags:
      - mcp
      summary: Call Tool
      description: 'Call a specific tool with the provided arguments.

        This endpoint follows OpenAI''s plugin conventions.'
      operationId: call_tool_api_v1_call_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - bearerAuth: []
  /test:
    get:
      summary: Test Endpoint
      description: A simple test endpoint that doesn't require authentication.
      operationId: test_endpoint_test_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openapi.yaml:
    get:
      summary: Get Openapi Yaml
      description: Serve the OpenAPI YAML specification.
      operationId: get_openapi_yaml_openapi_yaml_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openapi.json:
    get:
      summary: Get Openapi Json
      description: Serve the OpenAPI JSON specification.
      operationId: get_openapi_json_openapi_json_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    ApiKeyResponse:
      properties:
        api_key:
          type: string
          title: Api Key
      type: object
      required:
      - api_key
      title: ApiKeyResponse
      description: Model for API key response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    JsonResponse:
      properties:
        type:
          type: string
          title: Type
          default: json
        commands:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Commands
      type: object
      required:
      - commands
      title: JsonResponse
      description: Model for JSON responses.
    OperationParamsResponse:
      properties:
        operationId:
          type: string
          title: Operationid
        parameters:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Parameters
      type: object
      required:
      - operationId
      - parameters
      title: OperationParamsResponse
      description: Model for operation parameters responses.
    SonarrQueryModel:
      properties:
        intent:
          type: string
          title: Intent
        input:
          anyOf:
          - type: string
          - type: 'null'
          title: Input
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      type: object
      required:
      - intent
      title: SonarrQueryModel
      description: Model for Sonarr query requests.
    StatusResponse:
      properties:
        status:
          type: string
          title: Status
        message:
          type: string
          title: Message
      type: object
      required:
      - status
      - message
      title: StatusResponse
      description: Model for status responses.
    TextResponse:
      properties:
        type:
          type: string
          title: Type
          default: text
        content:
          type: string
          title: Content
      type: object
      required:
      - content
      title: TextResponse
      description: Model for text responses.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WelcomeResponse:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
      - message
      title: WelcomeResponse
      description: Model for welcome message response.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
